/* autogenerated by Processing revision 1293 on 2024-02-02 */
import processing.core.*;
import processing.data.*;
import processing.event.*;
import processing.opengl.*;

import java.util.HashMap;
import java.util.ArrayList;
import java.io.File;
import java.io.BufferedReader;
import java.io.PrintWriter;
import java.io.InputStream;
import java.io.OutputStream;
import java.io.IOException;

public class Interface extends PApplet {


public void setup(){
  System.out.println(ComponentStates.VISIBLE);
}

public void draw(){

}
public class Buttom{
  //Atributtes
  private double x,y,w,h;
  private boolean isVisible=false,
                  isStroke=true,
                  isOpaque=false,
                  isFocusable=false;
  private String text="";
  //private int aling=Buttom.alings.LEFT;
  
  //Constructors
  public Buttom(double x,double y,double w,double h){
    this.x=x;
    this.y=y;
    this.w=w;
    this.h=h;
  }
  public Buttom(){
    this(0,0,0,0);
  }
  
  //Publics
  public void show(){
    
  }
  
  //Setters
  public void setSize(double w,double h){
    this.w=w;
    this.h=h;
  }
  public void setLocation(double x,double y){
    this.x=x;
    this.y=y;
  }
  
  
  //Privates
  private boolean isPressed(){
    return isIn()&&mousePressed;
  }
  private boolean isIn(){
    return mouseX>=x&&
           mouseX<=x+w&&
           mouseY>=y&&
           mouseY<=y+h;
  }
}
public class Component{
  
  private double x,y;
  private double w,h;
  private boolean isVisible=false,
                  isStroke=true,
                  isOpaque=false,
                  isFocusable=false;
  
  //Constructores:
  public Component(double x,double y,double w,double h){
    this.x=x;
    this.y=y;
    this.w=w;
    this.h=h;
    this.states[0]=false;
    this.states[1]=
    
  }
  public Component(){this(0,0,0,0);}
  
  //Setters:
  public void setX(double x){this.x=x;}
  public void setY(double y){this.y=y;}
  public void setW(double w){this.w=w;}
  public void setH(double h){this.h=h;}
  public void setLocation(double x,double y){
    this.x=x;
    this.y=y;
  }
  public void setSize(double w, double h){
    this.w=w;
    this.h=h;
  }
}


  static public void main(String[] passedArgs) {
    String[] appletArgs = new String[] { "Interface" };
    if (passedArgs != null) {
      PApplet.main(concat(appletArgs, passedArgs));
    } else {
      PApplet.main(appletArgs);
    }
  }
}
